$ git diff 730afc7d942dc590e2f22844174a0f45140bb4b3 cc12d0e535671b3b27761ea750573c7364ae105b
diff --git a/NoSubir.txt b/NoSubir.txt
new file mode 100644
index 0000000..96e7e96
--- /dev/null
+++ b/NoSubir.txt
@@ -0,0 +1 @@
+El txt de no subir
diff --git a/main.java b/main.java
index 93aac52..a91f4c7 100644
--- a/main.java
+++ b/main.java
@@ -36,22 +36,38 @@ public class MostrarNumeros {

     }

-public static double sumar(double a, double b) {
+public static double restar(double a, double b) {

-        return a + b;
+        return a - b;

     }
-public static double multiplicar(double a, double b) {

-        return a * b;
+public static double dividir(double a, double b) {
+
+        if (b != 0) {
+
+            return a / b;
+
+        } else {
+
+            throw new IllegalArgumentException("No se puede dividir por cero");
+
+        }

     }

-public static double potencia(double base, double exponente) {
+public static double raizCuadrada(double a) {

-        return Math.pow(base, exponente);
:...skipping...
diff --git a/NoSubir.txt b/NoSubir.txt
new file mode 100644
index 0000000..96e7e96
--- /dev/null
+++ b/NoSubir.txt
@@ -0,0 +1 @@
+El txt de no subir
diff --git a/main.java b/main.java
index 93aac52..a91f4c7 100644
--- a/main.java
+++ b/main.java
@@ -36,22 +36,38 @@ public class MostrarNumeros {

     }

-public static double sumar(double a, double b) {
+public static double restar(double a, double b) {

-        return a + b;
+        return a - b;

     }
-public static double multiplicar(double a, double b) {

-        return a * b;
+public static double dividir(double a, double b) {
+
+        if (b != 0) {
+
+            return a / b;
+
+        } else {
+
+            throw new IllegalArgumentException("No se puede dividir por cero");
+
+        }

     }

-public static double potencia(double base, double exponente) {
+public static double raizCuadrada(double a) {

-        return Math.pow(base, exponente);
+        if (a >= 0) {

:...skipping...
diff --git a/NoSubir.txt b/NoSubir.txt
new file mode 100644
index 0000000..96e7e96
--- /dev/null
+++ b/NoSubir.txt
@@ -0,0 +1 @@
+El txt de no subir
diff --git a/main.java b/main.java
index 93aac52..a91f4c7 100644
--- a/main.java
+++ b/main.java
@@ -36,22 +36,38 @@ public class MostrarNumeros {

     }

-public static double sumar(double a, double b) {
+public static double restar(double a, double b) {

-        return a + b;
+        return a - b;

     }
-public static double multiplicar(double a, double b) {

-        return a * b;
+public static double dividir(double a, double b) {
+
+        if (b != 0) {
+
+            return a / b;
+
+        } else {
+
+            throw new IllegalArgumentException("No se puede dividir por cero");
+
+        }

     }

-public static double potencia(double base, double exponente) {
+public static double raizCuadrada(double a) {

-        return Math.pow(base, exponente);
+        if (a >= 0) {

-    }
+            return Math.sqrt(a);

+        } else {
+
+            throw new IllegalArgumentException("No se puede calcular la raíz cuadrada de un número negativo");
+
:
diff --git a/NoSubir.txt b/NoSubir.txt
new file mode 100644
index 0000000..96e7e96
--- /dev/null
+++ b/NoSubir.txt
@@ -0,0 +1 @@
+El txt de no subir
diff --git a/main.java b/main.java
index 93aac52..a91f4c7 100644
--- a/main.java
+++ b/main.java
@@ -36,22 +36,38 @@ public class MostrarNumeros {

     }

-public static double sumar(double a, double b) {
+public static double restar(double a, double b) {

-        return a + b;
+        return a - b;

     }
-public static double multiplicar(double a, double b) {

-        return a * b;
+public static double dividir(double a, double b) {
+
+        if (b != 0) {
+
+            return a / b;
+
+        } else {
+
+            throw new IllegalArgumentException("No se puede dividir por cero");
+
+        }

     }

-public static double potencia(double base, double exponente) {
+public static double raizCuadrada(double a) {

-        return Math.pow(base, exponente);
+        if (a >= 0) {

-    }
+            return Math.sqrt(a);

+        } else {
+
+            throw new IllegalArgumentException("No se puede calcular la raíz cuadrada de un número negativo");
+
